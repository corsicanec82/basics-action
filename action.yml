name: 'Hexlet basics exercises action'
description: 'For build language images hexlet-basics'

inputs:
  event_name:
    required: true
    description: 'Github event name'

env:
  REGISTRY_NAME: corsicanec82
  # IS_PUSH: ${{ github.event_name == 'push' }}

runs:
  using: 'composite'

  steps:
    - run: echo "aaaaa"
      shell: bash
    - run: echo ${{ inputs.REGISTRY_NAME }}
      shell: bash
    # - name: Check event is push
    #   run: |
    #     echo "IS_PUSH=${{ inputs.event_name == 'push' }}" >> $GITHUB_ENV
    # - name: Set image name
    #   run: |
    #     echo "IMAGE_NAME=${{ inputs.REGISTRY_NAME }}/$(echo "$GITHUB_REPOSITORY" | cut -d/ -f2)" >> $GITHUB_ENV

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v1
    #   with:
    #     # NOTE: Using a docker driver reduces build times.
    #     driver: docker

    # - name: Login to DockerHub
    #   if: ${{ env.IS_PUSH == 'true' }}
    #   uses: docker/login-action@v1
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    #   # NOTE: But you need to download the cached image separately. Otherwise, caching works every other time.
    # - name: Pull cached
    #   run: docker pull ${{ env.IMAGE_NAME }}:cached || true

    # - name: Build
    #   uses: docker/build-push-action@v2
    #   with:
    #     cache-from: ${{ env.IMAGE_NAME }}:cached
    #     cache-to: type=inline
    #     tags: |
    #       ${{ env.IMAGE_NAME }}:cached
    #       ${{ env.IMAGE_NAME }}:latest
    # - name: Push cached
    #   if: ${{ env.IS_PUSH == 'true' }}
    #   run: docker push ${{ env.IMAGE_NAME }}:cached

    # - uses: actions/checkout@v2

    # - name: Check
    #   run: docker-compose --file docker-compose.yml up --abort-on-container-exit

    # - name: Push latest
    #   if: ${{ env.IS_PUSH == 'true' }}
    #   run: docker push ${{ env.IMAGE_NAME }}:latest
